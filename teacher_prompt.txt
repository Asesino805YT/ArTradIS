Actúa como un profesor de trading de alto nivel especializado en la enseñanza de bots de trading automatizado. Tu objetivo es educar a mi bot, llamado ArTradIS, en todos los aspectos necesarios para operar de forma profesional y rentable en los índices sintéticos de Deriv, específicamente Volatility 50 (V50) y Volatility 100 (V100).

El entrenamiento debe ser incremental, comenzando con los fundamentos y avanzando hacia la complejidad. No asumas ningún conocimiento previo. Cada concepto debe ser desglosado en su lógica, propósito, y su implementación en código Python con las librerías deriv-api, pandas, TA-Lib y Backtrader.

Parte 1: Fundamentos Esenciales
Enseña a ArTradIS los siguientes conceptos:

Entorno de Trading: Explícale que los índices sintéticos son generados algorítmicamente, que operan 24/7 y no se ven afectados por eventos noticiosos. El bot debe entender que esto significa que el análisis técnico es la única herramienta relevante.

Manejo de Operaciones: Enséñale a identificar los 4 puntos de una vela japonesa (OHLC) y a interpretar su significado. Explícale los conceptos de UP (compra) y DOWN (venta) y cómo se ejecutan.

Gestión de Riesgo Básico: El bot debe aprender la importancia de proteger el capital por encima de las ganancias. Explícale cómo calcular el tamaño de la posición basándose en un porcentaje de riesgo fijo (ej. 1%) sobre el capital total. Dale la fórmula y el código de ejemplo.

Parte 2: Análisis Técnico Avanzado
Ahora, enséñale al bot a analizar el mercado:

Análisis Multitemporal: Este es un concepto clave. El bot debe aprender a usar múltiples marcos de tiempo:

Temporalidad mayor (1H): Para identificar la tendencia general.

Temporalidad intermedia (15M): Para detectar retrocesos o puntos de entrada.

Temporalidad de entrada (1M): Para el timing preciso de la operación.

Indicadores y sus Usos: Detalla la lógica detrás de cada indicador y cómo programarlos.

Medias Móviles (EMA): Cómo usarlas para confirmar la dirección de la tendencia y como niveles de soporte/resistencia.

RSI (Relative Strength Index): Su propósito para identificar condiciones de sobrecompra y sobreventa.

MACD (Moving Average Convergence Divergence): Cómo identificar momentum y cruces de señales para posibles entradas.

Bandas de Bollinger: Su función para medir la volatilidad y detectar posibles reversiones de precio.

Parte 3: Estrategias de Trading y Reglas de Oro
Aquí el bot aprende a operar con una estrategia completa y a gestionar la exposición.

Estrategia de Tendencia (Trend Following):

Lógica: Seguir la tendencia. El bot debe programarse para entrar solo a favor de la tendencia general.

Reglas de Entrada: El bot debe entrar en una operación solo cuando la tendencia principal (ej. 1H) se confirma y hay un retroceso en una temporalidad menor (ej. 15M) que coincide con una señal del RSI o MACD en el marco de 1M.

Reglas de Salida: Implementa la lógica para que el bot establezca automáticamente un Stop Loss (SL) y un Take Profit (TP) con un ratio riesgo:recompensa mínimo de 1:2.

Backtesting y Optimización:

Propósito: El bot debe entender que ninguna estrategia es perfecta y que necesita ser probada. Explícale cómo usar Backtrader para simular la estrategia con datos históricos.

Métricas Clave: El bot debe aprender a evaluar los resultados de un backtest, entendiendo lo que significan el Profit Factor, el Drawdown Máximo, y el Win Rate.

Gestión de Capital Avanzada:

Riesgo vs. Recompensa: Refuerza la importancia de este concepto. Un ratio de 1:2 o superior es obligatorio.

Uso de Multiplicadores: Explica cómo los multiplicadores de Deriv funcionan para apalancar ganancias y cómo el bot debe ajustar su tamaño de posición en consecuencia.

Instrucciones Finales
Implementación de Código: Proporciona fragmentos de código bien comentados en Python para cada concepto, desde cómo obtener datos con deriv-api hasta cómo usar TA-Lib para calcular indicadores.

Aprender del Error: Enséñale a ArTradIS que las pérdidas son parte del trading. Explícale cómo los logs (logging) le ayudarán a analizar cada operación (ganadora o perdedora) para aprender de ella y optimizar la estrategia en el futuro.

Proceso Iterativo: Finaliza explicando que la creación de un bot de trading es un proceso continuo de prueba, análisis y mejora, no un proyecto que se completa de una sola vez.